spring.application.name=gateway-application

server.port=8081
#spring.main.web-application-type=reactive

spring.cloud.discovery.enabled=true

# Define route for user-service
#spring.cloud.gateway.routes[0].id=user-service
#spring.cloud.gateway.routes[0].uri=http://localhost:8084/
#spring.cloud.gateway.routes[0].predicates[0]=Path=/api/users/**
#
#spring.cloud.gateway.routes[1].id=approval-service
#spring.cloud.gateway.routes[1].uri=http://localhost:8088/
#spring.cloud.gateway.routes[1].predicates[0]=Path=/api/approvals/**
#
#spring.cloud.gateway.routes[2].id=room-service
#spring.cloud.gateway.routes[2].uri=http://localhost:8083/
#spring.cloud.gateway.routes[2].predicates[0]=Path=/api/room/**
#
#spring.cloud.gateway.routes[3].id=event-service
#spring.cloud.gateway.routes[3].uri=http://localhost:8085/
#spring.cloud.gateway.routes[3].predicates[0]=Path=/api/events/**
#
#spring.cloud.gateway.routes[4].id=booking-service
#spring.cloud.gateway.routes[4].uri=http://localhost:8087/
#spring.cloud.gateway.routes[4].predicates[0]=Path=/api/bookings/**


management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/event-booking-realm
#spring.security.oauth2.client.registration.keycloak.client-id=event-client
#spring.security.oauth2.client.registration.keycloak.client-secret=password
#spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#
#keycloak.auth-server-url=http://localhost:8080
#keycloak.realm=event-booking-realm
#keycloak.resource=event-client
#keycloak.public-client=false


# Gateway routes
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=http://localhost:8084/
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/users/**
#spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
#spring.cloud.gateway.routes[0].filters[0].args.name=userServiceCircuitBreaker
#spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/fallback/users

spring.cloud.gateway.routes[1].id=approval-service
spring.cloud.gateway.routes[1].uri=http://localhost:8088/
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/approvals/**
#spring.cloud.gateway.routes[1].filters[0].name=CircuitBreaker
#spring.cloud.gateway.routes[1].filters[0].args.name=approvalServiceCircuitBreaker
#spring.cloud.gateway.routes[1].filters[0].args.fallbackUri=forward:/fallback/approvals

spring.cloud.gateway.routes[2].id=room-service
spring.cloud.gateway.routes[2].uri=http://localhost:8083/
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/room/**
#spring.cloud.gateway.routes[2].filters[0].name=CircuitBreaker
#spring.cloud.gateway.routes[2].filters[0].args.name=roomServiceCircuitBreaker
#spring.cloud.gateway.routes[2].filters[0].args.fallbackUri=forward:/fallback/room

spring.cloud.gateway.routes[3].id=event-service
spring.cloud.gateway.routes[3].uri=http://localhost:8085/
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/events/**
#spring.cloud.gateway.routes[3].filters[0].name=CircuitBreaker
#spring.cloud.gateway.routes[3].filters[0].args.name=eventServiceCircuitBreaker
#spring.cloud.gateway.routes[3].filters[0].args.fallbackUri=forward:/fallback/events

spring.cloud.gateway.routes[4].id=booking-service
spring.cloud.gateway.routes[4].uri=http://localhost:8087/
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/bookings/**
#spring.cloud.gateway.routes[4].filters[0].name=CircuitBreaker
#spring.cloud.gateway.routes[4].filters[0].args.name=bookingServiceCircuitBreaker
#spring.cloud.gateway.routes[4].filters[0].args.fallbackUri=forward:/fallback/bookings



# Resilience4j configuration for Circuit Breakers
#resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
#resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
#resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=10000
#resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=5
#resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=5
#resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
#
#resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.baseConfig=default
#resilience4j.circuitbreaker.instances.approvalServiceCircuitBreaker.baseConfig=default
#resilience4j.circuitbreaker.instances.roomServiceCircuitBreaker.baseConfig=default
#resilience4j.circuitbreaker.instances.eventServiceCircuitBreaker.baseConfig=default
#resilience4j.circuitbreaker.instances.bookingServiceCircuitBreaker.baseConfig=default

