spring.application.name=gateway-application

server.port=8081
spring.cloud.compatibility-verifier.enabled=false
#spring.main.web-application-type=reactive

spring.cloud.discovery.enabled=true
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=http://localhost:8084/
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/users/**

spring.cloud.gateway.routes[1].id=approval-service
spring.cloud.gateway.routes[1].uri=http://localhost:8088/
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/approvals/**

spring.cloud.gateway.routes[2].id=room-service
spring.cloud.gateway.routes[2].uri=http://localhost:8083/
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/room/**

spring.cloud.gateway.routes[3].id=event-service
spring.cloud.gateway.routes[3].uri=http://localhost:8085/
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/events/**

spring.cloud.gateway.routes[4].id=booking-service
spring.cloud.gateway.routes[4].uri=http://localhost:8087/
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/bookings/**



management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=prometheus,health
management.prometheus.metrics.export.enabled=true



microservices.swagger-urls=http://localhost:8084/v3/api-docs
spring.jackson.serialization.indent_output=true


springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.api-docs.path=/swagger-aggregator
springdoc.swagger-ui.url=/swagger-aggregator
spring.main.web-application-type=reactive

## Keycloak Configuration
#keycloak.auth-server-url=http://localhost:8080/auth
#keycloak.realm=event-realm
#keycloak.resource=api-gateway
#keycloak.credentials.secret=OAEvcBovxAzT14Rjo9zFkAqkdsCSGQpd
##keycloak.security-constraints[0].authRoles[0]=user
##keycloak.security-constraints[0].securityCollections[0].patterns[0]=/booking/**
#keycloak.security-constraints[1].authRoles[0]=staff
#keycloak.security-constraints[1].securityCollections[0].patterns[0]=/approval/**
#
## Spring Boot Configuration
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/event-realm



## Gateway routes
#spring.cloud.gateway.routes[0].id=user-service
#spring.cloud.gateway.routes[0].uri=http://localhost:8084/
#spring.cloud.gateway.routes[0].predicates[0]=Path=/api/users/**
##spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
##spring.cloud.gateway.routes[0].filters[0].args.name=userServiceCircuitBreaker
##spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/fallback/users
#
#spring.cloud.gateway.routes[1].id=approval-service
#spring.cloud.gateway.routes[1].uri=http://localhost:8088/
#spring.cloud.gateway.routes[1].predicates[0]=Path=/api/approvals/**
##spring.cloud.gateway.routes[1].filters[0].name=CircuitBreaker
##spring.cloud.gateway.routes[1].filters[0].args.name=approvalServiceCircuitBreaker
##spring.cloud.gateway.routes[1].filters[0].args.fallbackUri=forward:/fallback/approvals
#
#spring.cloud.gateway.routes[2].id=room-service
#spring.cloud.gateway.routes[2].uri=http://localhost:8083/
#spring.cloud.gateway.routes[2].predicates[0]=Path=/api/room/**
##spring.cloud.gateway.routes[2].filters[0].name=CircuitBreaker
##spring.cloud.gateway.routes[2].filters[0].args.name=roomServiceCircuitBreaker
##spring.cloud.gateway.routes[2].filters[0].args.fallbackUri=forward:/fallback/room
#
#spring.cloud.gateway.routes[3].id=event-service
#spring.cloud.gateway.routes[3].uri=http://localhost:8085/
#spring.cloud.gateway.routes[3].predicates[0]=Path=/api/events/**
##spring.cloud.gateway.routes[3].filters[0].name=CircuitBreaker
##spring.cloud.gateway.routes[3].filters[0].args.name=eventServiceCircuitBreaker
##spring.cloud.gateway.routes[3].filters[0].args.fallbackUri=forward:/fallback/events
#
#spring.cloud.gateway.routes[4].id=booking-service
#spring.cloud.gateway.routes[4].uri=http://localhost:8087/
#spring.cloud.gateway.routes[4].predicates[0]=Path=/api/bookings/**
##spring.cloud.gateway.routes[4].filters[0].name=CircuitBreaker
##spring.cloud.gateway.routes[4].filters[0].args.name=bookingServiceCircuitBreaker
##spring.cloud.gateway.routes[4].filters[0].args.fallbackUri=forward:/fallback/bookings



